import pandas as pd
import pytest

from cascade.dismod.db.wrapper import DismodFile
from cascade.core.context import ExecutionContext
import cascade.saver.db.save_model_results_to_db
from cascade.saver.db.save_model_results_to_db import (
    _normalize_draws_df,
    _write_temp_draws_file_and_upload_model_results,
)


@pytest.fixture(scope="module")
def execution_context():
    defaults = {
        "modelable_entity_id": 1175,
        "model_version_id": None,
        "model_title": "GBD 2010 Best (dm-39976)",
        "db_env": "dev",
        "gbd_round_id": 5,
        "database": "dismod-at-dev",
        "year_id": 2010,
    }
    execution_context = ExecutionContext()
    execution_context.dismodfile = DismodFile()
    execution_context.dismodfile.node = pd.DataFrame([{"node_id": 0, "node_name": "102", "parent": None}])
    execution_context.parameters = defaults

    return execution_context


@pytest.fixture(scope="module")
def pre_normalized_draws_df():
    pre_normalized_draws_df = pd.DataFrame()
    pre_normalized_draws_df["age_upper"] = [15.0, 15.0, 15.0, 15.0, 80.0, 80.0, 80.0, 80]
    pre_normalized_draws_df["age_lower"] = [10.0, 10.0, 10.0, 10.0, 75.0, 75.0, 75.0, 75]
    pre_normalized_draws_df["node_id"] = [0, 0, 0, 0, 0, 0, 0, 0]
    pre_normalized_draws_df["integrand_id"] = [2, 2, 7, 7, 2, 2, 7, 7]
    pre_normalized_draws_df["sex_id"] = [1, 2, 1, 2, 1, 2, 1, 2]
    pre_normalized_draws_df["weight_id"] = [0, 0, 0, 0, 0, 0, 0, 0]
    pre_normalized_draws_df["time_lower"] = [1990.0, 1990.0, 1995.0, 1995.0, 2000.0, 2005.0, 2010.0, 2017.0]
    pre_normalized_draws_df["time_upper"] = [1990.0, 1990.0, 1995.0, 1995.0, 2000.0, 2005.0, 2010.0, 2017.0]
    pre_normalized_draws_df["draw_0"] = [1, 2, 3, 4, 1.1, 2.1, 3.1, 4.1]
    pre_normalized_draws_df["draw_1"] = [5, 6, 7, 8, 5.1, 6.1, 7.1, 8.1]
    pre_normalized_draws_df["draw_2"] = [9, 10, 11, 12, 9.1, 10.1, 11.1, 12.1]
    pre_normalized_draws_df["draw_3"] = [13, 14, 15, 16, 13.1, 14.1, 15.1, 16.1]

    return pre_normalized_draws_df


@pytest.fixture(scope="module")
def draws_df():
    draws_df = pd.DataFrame()
    draws_df["age_group_id"] = [7, 7, 7, 7, 20, 20, 20, 20]
    draws_df["location_id"] = [102, 102, 102, 102, 102, 102, 102, 102]
    draws_df["measure_id"] = [9, 9, 5, 5, 9, 9, 5, 5]
    draws_df["sex_id"] = [1, 2, 1, 2, 1, 2, 1, 2]
    draws_df["year_id"] = [1990, 1990, 1995, 1995, 2000, 2005, 2010, 2017]
    draws_df["draw_0"] = [1, 2, 3, 4, 1.1, 2.1, 3.1, 4.1]
    draws_df["draw_1"] = [5, 6, 7, 8, 5.1, 6.1, 7.1, 8.1]
    draws_df["draw_2"] = [9, 10, 11, 12, 9.1, 10.1, 11.1, 12.1]
    draws_df["draw_3"] = [13, 14, 15, 16, 13.1, 14.1, 15.1, 16.1]

    return draws_df


def save_results_fake(input_dir, input_file_pattern, modelable_entity_id, model_title, measures_to_save, **kwargs):

    mvid_df = pd.DataFrame()
    mvid_df["mvid"] = ["1234"]

    return mvid_df


def to_hdf_fake(file_path, key, *pargs, **kwargs):
    pass


@pytest.fixture
def fake_save_results_at(monkeypatch):
    monkeypatch.setattr(cascade.saver.db.save_model_results_to_db, "save_results_at", save_results_fake)


@pytest.fixture
def fake_write_hdf(monkeypatch):
    monkeypatch.setattr(pd.DataFrame, "to_hdf", to_hdf_fake)


@pytest.fixture
def mock_db_queries(mocker):
    mock = mocker.patch("cascade.input_data.db.demographics.db_queries")
    mock.get_demographics.return_value = {
        "location_id": [
            491,
            492,
            493,
            494,
            495,
            496,
            497,
            498,
            499,
            500,
            501,
            502,
            354,
            503,
            504,
            505,
            506,
            507,
            508,
            509,
            361,
            510,
            511,
            512,
            513,
            514,
            515,
            516,
            517,
            518,
            519,
            520,
            521,
            7,
            8,
            10,
            4709,
            4726,
            4717,
            4725,
            4715,
            4737,
            4720,
            4713,
            4721,
            4722,
            4724,
            4729,
            4731,
            4730,
            4732,
            4719,
            4718,
            4716,
            4739,
            4740,
            4727,
            4728,
            4742,
            4741,
            4712,
            4738,
            4735,
            4734,
            4736,
            4733,
            4711,
            4714,
            4710,
            4723,
            12,
            13,
            14,
            183,
            15,
            16,
            17,
            186,
            18,
            19,
            20,
            298,
            25,
            22,
            351,
            23,
            24,
            376,
            26,
            27,
            28,
            29,
            30,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            55,
            57,
            58,
            59,
            60,
            61,
            44971,
            44983,
            44924,
            44936,
            44903,
            44904,
            44945,
            44966,
            44987,
            44952,
            44974,
            44907,
            44986,
            44942,
            44926,
            44908,
            44980,
            44943,
            44975,
            44982,
            44963,
            44954,
            44922,
            44909,
            44935,
            44973,
            44961,
            44910,
            44927,
            44911,
            44984,
            44920,
            44912,
            44928,
            44923,
            44955,
            44929,
            44976,
            44977,
            44956,
            44913,
            44957,
            44953,
            44981,
            44930,
            44932,
            44967,
            44947,
            44968,
            44940,
            44941,
            44933,
            44921,
            44970,
            44948,
            44949,
            44944,
            44979,
            44950,
            44969,
            44938,
            44914,
            44985,
            44958,
            44931,
            44959,
            44915,
            44946,
            44962,
            44916,
            44978,
            44918,
            44917,
            44965,
            44951,
            44960,
            44905,
            44937,
            44925,
            44906,
            44964,
            44919,
            44972,
            50559,
            44934,
            44939,
            66,
            35446,
            35428,
            35425,
            35435,
            35461,
            35441,
            35463,
            35430,
            35444,
            35433,
            35457,
            35424,
            35451,
            35431,
            35440,
            35426,
            35460,
            35469,
            35437,
            35462,
            35466,
            35449,
            35447,
            35427,
            35468,
            35443,
            35465,
            35452,
            35438,
            35467,
            35456,
            35470,
            35450,
            35464,
            35434,
            35448,
            35455,
            35445,
            35432,
            35459,
            35436,
            35454,
            35439,
            35453,
            35429,
            35458,
            35442,
            68,
            69,
            71,
            44850,
            44851,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85,
            86,
            87,
            88,
            89,
            4911,
            4918,
            4915,
            4928,
            4912,
            4921,
            4923,
            4926,
            4913,
            4910,
            4914,
            4920,
            4922,
            4917,
            4927,
            53432,
            4919,
            4916,
            91,
            92,
            4944,
            4940,
            94,
            44697,
            44698,
            44701,
            44694,
            44695,
            44693,
            44700,
            44699,
            44696,
            44716,
            44721,
            44717,
            44720,
            44719,
            44726,
            44723,
            44725,
            44724,
            44718,
            44722,
            44754,
            44729,
            44732,
            44735,
            44731,
            44748,
            44742,
            44744,
            44741,
            44745,
            44756,
            44743,
            44755,
            44740,
            44737,
            44736,
            44751,
            44757,
            44728,
            44738,
            44749,
            44750,
            44734,
            44753,
            44733,
            44727,
            44752,
            44739,
            44758,
            44747,
            44746,
            44730,
            44649,
            44643,
            44650,
            44654,
            44651,
            44646,
            44647,
            44644,
            44648,
            44652,
            44645,
            44653,
            44674,
            44676,
            44662,
            44664,
            44655,
            44658,
            44661,
            44670,
            44675,
            44660,
            44671,
            44677,
            44667,
            44668,
            44673,
            44659,
            44665,
            44656,
            44672,
            44657,
            44666,
            44669,
            44663,
            44765,
            44770,
            44760,
            44772,
            44764,
            44774,
            44769,
            44771,
            44775,
            44767,
            44773,
            44768,
            44777,
            44776,
            44761,
            44763,
            44766,
            44762,
            44759,
            44784,
            44790,
            44789,
            44791,
            44782,
            44779,
            44785,
            44781,
            44792,
            44783,
            44786,
            44778,
            44787,
            44788,
            44780,
            44714,
            44709,
            44708,
            44703,
            44715,
            44705,
            44704,
            44707,
            44711,
            44710,
            44712,
            44702,
            44713,
            44706,
            44692,
            44684,
            44682,
            44690,
            44679,
            44691,
            44685,
            44686,
            44681,
            44683,
            44678,
            44689,
            44687,
            44688,
            44680,
            433,
            434,
            4636,
            97,
            98,
            99,
            101,
            349,
            523,
            524,
            525,
            526,
            527,
            528,
            529,
            530,
            531,
            532,
            533,
            534,
            535,
            536,
            537,
            538,
            539,
            540,
            541,
            542,
            543,
            544,
            545,
            546,
            547,
            548,
            549,
            550,
            551,
            552,
            553,
            554,
            555,
            556,
            557,
            558,
            559,
            560,
            561,
            562,
            563,
            564,
            565,
            566,
            567,
            568,
            569,
            570,
            571,
            572,
            573,
            105,
            106,
            107,
            108,
            305,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            385,
            116,
            117,
            118,
            119,
            422,
            121,
            122,
            123,
            125,
            126,
            127,
            128,
            129,
            4643,
            4644,
            4645,
            4646,
            4649,
            4650,
            4647,
            4648,
            4651,
            4652,
            4653,
            4654,
            4655,
            4656,
            4657,
            4658,
            4659,
            4660,
            4661,
            4662,
            4663,
            4664,
            4665,
            4666,
            4667,
            4668,
            4669,
            4670,
            4671,
            4672,
            4673,
            4674,
            131,
            132,
            133,
            4750,
            4751,
            4753,
            4752,
            4754,
            4755,
            4756,
            4757,
            4758,
            4759,
            4762,
            4761,
            4760,
            4763,
            4764,
            4765,
            4766,
            4767,
            4768,
            4769,
            4772,
            4770,
            4771,
            4773,
            4775,
            4774,
            4776,
            136,
            160,
            139,
            140,
            141,
            44864,
            44865,
            44868,
            44869,
            44866,
            44870,
            44871,
            44872,
            44873,
            44874,
            44875,
            44876,
            44877,
            44878,
            44880,
            44882,
            44883,
            44884,
            44885,
            44886,
            44887,
            44879,
            44888,
            44889,
            44890,
            44891,
            44881,
            44892,
            44867,
            44893,
            44894,
            143,
            144,
            145,
            146,
            147,
            148,
            149,
            150,
            151,
            152,
            522,
            153,
            154,
            155,
            156,
            157,
            161,
            162,
            43908,
            43872,
            43909,
            43873,
            43910,
            43874,
            43911,
            43875,
            43913,
            43877,
            43916,
            43880,
            43917,
            43881,
            43918,
            43882,
            43919,
            43883,
            43920,
            43884,
            43921,
            43885,
            43922,
            43886,
            43923,
            43887,
            43924,
            43888,
            43926,
            43890,
            43927,
            43891,
            43928,
            43892,
            43929,
            43893,
            43930,
            43894,
            43931,
            43895,
            43932,
            43896,
            43934,
            43898,
            43935,
            43899,
            43936,
            43900,
            43937,
            43901,
            43938,
            43902,
            43939,
            43903,
            43940,
            43904,
            43941,
            43905,
            43942,
            43906,
            44539,
            44540,
            164,
            165,
            168,
            169,
            170,
            171,
            172,
            173,
            175,
            176,
            177,
            178,
            44861,
            44853,
            44854,
            44857,
            44862,
            44860,
            44859,
            44855,
            44856,
            44858,
            44852,
            35617,
            35618,
            35619,
            35620,
            35621,
            35622,
            35623,
            35624,
            35625,
            35626,
            35627,
            35628,
            35629,
            35630,
            35631,
            35632,
            35633,
            35634,
            35635,
            35636,
            35637,
            35638,
            35639,
            35640,
            35641,
            35642,
            35643,
            35644,
            35645,
            35646,
            35647,
            35648,
            35649,
            35650,
            35651,
            35652,
            35653,
            35654,
            35655,
            35656,
            35657,
            35658,
            35659,
            35660,
            35661,
            35662,
            35663,
            181,
            182,
            184,
            185,
            187,
            435,
            189,
            190,
            191,
            193,
            194,
            195,
            482,
            483,
            484,
            485,
            486,
            487,
            488,
            489,
            490,
            197,
            198,
            200,
            201,
            202,
            203,
            204,
            205,
            206,
            207,
            208,
            209,
            210,
            211,
            212,
            213,
            214,
            215,
            216,
            217,
            218,
        ],
        "sex_id": [1, 2],
        "age_group_id": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 30, 31, 32, 235],
        "year_id": [1990, 1995, 2000, 2005, 2010, 2017],
    }
    mock.get_age_metadata.return_value = pd.DataFrame(
        {
            "age_group_id": {
                0: 2,
                1: 3,
                2: 4,
                3: 5,
                4: 6,
                5: 7,
                6: 8,
                7: 9,
                8: 10,
                9: 11,
                10: 12,
                11: 13,
                12: 14,
                13: 15,
                14: 16,
                15: 17,
                16: 18,
                17: 19,
                18: 20,
                19: 30,
                20: 31,
                21: 32,
                22: 235,
            },
            "age_group_years_start": {
                0: 0.0,
                1: 0.01917808,
                2: 0.07671233,
                3: 1.0,
                4: 5.0,
                5: 10.0,
                6: 15.0,
                7: 20.0,
                8: 25.0,
                9: 30.0,
                10: 35.0,
                11: 40.0,
                12: 45.0,
                13: 50.0,
                14: 55.0,
                15: 60.0,
                16: 65.0,
                17: 70.0,
                18: 75.0,
                19: 80.0,
                20: 85.0,
                21: 90.0,
                22: 95.0,
            },
            "age_group_years_end": {
                0: 0.01917808,
                1: 0.07671233,
                2: 1.0,
                3: 5.0,
                4: 10.0,
                5: 15.0,
                6: 20.0,
                7: 25.0,
                8: 30.0,
                9: 35.0,
                10: 40.0,
                11: 45.0,
                12: 50.0,
                13: 55.0,
                14: 60.0,
                15: 65.0,
                16: 70.0,
                17: 75.0,
                18: 80.0,
                19: 85.0,
                20: 90.0,
                21: 95.0,
                22: 125.0,
            },
            "age_group_weight_value": {
                0: 0.000408021,
                1: 0.00121276,
                2: 0.0191616,
                3: 0.0810245,
                4: 0.0967733,
                5: 0.0895261,
                6: 0.0838286,
                7: 0.0801708,
                8: 0.0777873,
                9: 0.0733159,
                10: 0.0677595,
                11: 0.0608903,
                12: 0.0546581,
                13: 0.0487362,
                14: 0.0425164,
                15: 0.0359617,
                16: 0.029149,
                17: 0.0213028,
                18: 0.0160833,
                19: 0.0107842,
                20: 0.00603162,
                21: 0.00234261,
                22: 0.000575352,
            },
        }
    )

    return mock


def test_normalize_draws_df(pre_normalized_draws_df, draws_df, execution_context, mock_db_queries):
    normalized_draws = _normalize_draws_df(pre_normalized_draws_df, execution_context)

    # ignoring the order of the rows and columns
    pd.testing.assert_frame_equal(draws_df, normalized_draws, check_like=True)


def test_write_temp_draws_file_and_upload_model_results_no_hdf_no_sr_call(
    draws_df, execution_context, fake_save_results_at, fake_write_hdf
):

    model_version_id = _write_temp_draws_file_and_upload_model_results(draws_df, execution_context)

    assert model_version_id == 1234


def test_write_temp_draws_file_and_upload_model_results_no_sr_call(draws_df, execution_context, fake_save_results_at):

    model_version_id = _write_temp_draws_file_and_upload_model_results(draws_df, execution_context)

    assert model_version_id == 1234
